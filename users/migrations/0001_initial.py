# Generated by Django 4.1.3 on 2023-02-16 12:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assessments', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(blank=True, max_length=50, verbose_name='full_name')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=users.models.get_profile_picture_filepath, verbose_name='profile picture')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='Bio')),
                ('source', models.CharField(blank=True, max_length=50, verbose_name='source')),
                ('contact', models.IntegerField(blank=True, null=True, verbose_name='contact')),
                ('current_attempts', models.PositiveIntegerField(default=0)),
                ('test_active', models.BooleanField(default=False)),
                ('final_score', models.PositiveIntegerField(default=0)),
                ('offical_ID_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Offical ID')),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female')], default='male', max_length=10, verbose_name='Gender')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AgentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=120, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(blank=True, max_length=120, null=True)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='DriverAge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Range')),
            ],
        ),
        migrations.CreateModel(
            name='DriverNationality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invocies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_by', models.CharField(blank=True, max_length=50, null=True)),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.CharField(blank=True, max_length=50, null=True)),
                ('end_date', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InvociesFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to=users.models.get_invoice_filepath, verbose_name='Invoice File')),
                ('type', models.CharField(choices=[('indvidual', 'indvidual'), ('group', 'group'), ('company', 'company')], default='', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('active', models.BooleanField(default=False)),
                ('fees', models.PositiveIntegerField(default=0)),
                ('location', models.CharField(default='Dubai UAE', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='OtpCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='invociesfile',
            index=models.Index(fields=['file', 'active', 'location', 'fees', 'type', 'timestamp'], name='users_invoc_file_1d1b1a_idx'),
        ),
        migrations.AddField(
            model_name='invocies',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.companycategory'),
        ),
        migrations.AddField(
            model_name='invocies',
            name='invocies_file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.invociesfile'),
        ),
        migrations.AddField(
            model_name='invocies',
            name='user',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='driverage',
            index=models.Index(fields=['number'], name='users_drive_number_101482_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['full_name', 'email', 'subject', 'content'], name='users_conta_full_na_42946f_idx'),
        ),
        migrations.AddIndex(
            model_name='companycategory',
            index=models.Index(fields=['name'], name='users_compa_name_65d51c_idx'),
        ),
        migrations.AddField(
            model_name='agentcategory',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.companycategory'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='age',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.driverage'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='agents',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.agentcategory'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.companycategory'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='driver_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assessments.drivercategory'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='nationality',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.drivernationality'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='invocies',
            index=models.Index(fields=['active', 'start_date', 'end_date', 'company', 'create_by', 'invocies_file', 'timestamp'], name='users_invoc_active_193be9_idx'),
        ),
        migrations.AddIndex(
            model_name='agentcategory',
            index=models.Index(fields=['name', 'company'], name='users_agent_name_920fc2_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['full_name', 'agents', 'gender', 'current_attempts', 'driver_category', 'source', 'contact', 'final_score', 'test_active', 'offical_ID_number', 'company', 'nationality'], name='users_custo_full_na_29d995_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customuser',
            unique_together={('full_name', 'offical_ID_number')},
        ),
    ]
