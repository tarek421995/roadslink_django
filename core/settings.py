"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from django_archive import archivers
import os
from pathlib import Path
import environ
# import django_heroku
# django_heroku.settings(locals())
env = environ.Env()

environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#+^6_jx%8rmq9oa(frs7ro4pvr6qn7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
BOOTSTRAP_ADMIN_SIDEBAR_MENU = False

INSTALLED_APPS = [
    'admin_tools_stats',  # this must be BEFORE 'admin_tools' and 'django.contrib.admin'
    'django_nvd3',
    'bootstrap_admin',  # always before django.contrib.admin

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'django_ledger',
    'easyaudit',
    'django_archive',

    # 'report_builder',
    'blog.apps.BlogConfig',
    'dashboard.apps.DashboardConfig',
    'analytics.apps.AnalyticsConfig',
    'users.apps.UsersConfig',
    'assessments.apps.AssessmentsConfig',
    'data_browser',
    'slick_reporting',
    'crispy_forms',
    'django_quill',

    'django.contrib.humanize',
    'django_cleanup.apps.CleanupConfig',

]
DJANGO_LEDGER_CURRENCY_SYMBOL =  'د.إ'
CURRENCIES = {
    'USD': '$',  # US Dollar
    'EUR': '€',  # Euro
    'AED': 'د.إ',  # UAE Dirham
    # Add more currencies here...
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.cache.FetchFromCacheMiddleware',
    'easyaudit.middleware.easyaudit.EasyAuditMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

ARCHIVE_FORMAT = archivers.ZIP

ARCHIVE_EXCLUDE_APPS = ['django_ledger', 'easyaudit']

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.static',
                'django.template.context_processors.media',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'blog.context_processors.globalVariable',  # blog context
                'core.context_processors.cfg_assets_root',

            ],
        },
    },
]
REPORT_BUILDER_GLOBAL_EXPORT = True
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
    )
}
WSGI_APPLICATION = 'core.wsgi.application'
ASGI_APPLICATION = "core.asgi.application"

DJANGO_EASY_AUDIT_ADMIN_SHOW_MODEL_EVENTS = True
DJANGO_EASY_AUDIT_ADMIN_SHOW_AUTH_EVENTS = True
DJANGO_EASY_AUDIT_ADMIN_SHOW_REQUEST_EVENTS = True

DATA_UPLOAD_MAX_NUMBER_FILES = 350

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# DATABASE_ROUTERS = ['core.routers.SecondaryDatabaseRouter']


# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://127.0.0.1:6379/1",
#         "MAX_ENTRIES": 500,
#         "CULL_FREQUENCY": 2,
        
#         "OPTIONS": {
#             'db': '10',
#             'parser_class': 'redis.connection.PythonParser',
#             'pool_class': 'redis.BlockingConnectionPool',
#             "CLIENT_CLASS": "django_redis.client.DefaultClient"
#         },
#         "KEY_PREFIX": "roadslink"
#     }
# }

# SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
# SESSION_CACHE_ALIAS = 'default'
# # Cache time to live is 15 minutes.
# CACHE_TTL = 60 * 15
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'd4t45vt2168k7n',
#         'USER': os.getenv('POSTGRES_USER','mmtfkfllmuaslj'),
#         'PASSWORD': os.getenv('POSTGRES_PASSWORD','550817563207f0677be52e1da543949666580fc208b4f81f0ff0cccdc0e218a8'),
#         'HOST': os.getenv('POSTGRES_HOST','ec2-34-197-84-74.compute-1.amazonaws.com'),
#         'PORT': os.getenv('POSTGRES_PORT', 5432)

#     }
# }

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static_cdn", "static_root")

ASSETS_ROOT = '/static/assets'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "static_cdn", "media_root")


PROTECTED_ROOT = os.path.join(BASE_DIR, "static_cdn", "protected_media")

# STATIC_URL = 'static/'
# STATIC_ROOT = BASE_DIR / 'staticfiles'

# STATICFILES_DIRS = [
#     BASE_DIR / 'static',
# ]

# MEDIA_URL = 'media/'
# MEDIA_ROOT = BASE_DIR / 'static' / 'images'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.CustomUser'
LOGIN_URL = 'users:login'
AUTHENTICATION_BACKENDS = [
    'users.backends.EmailOrUsernameModelBackend'
]
# APPEND_SLASH=False
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'EMAIL_HOST'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'EMAIL_HOST_USER'
EMAIL_HOST_PASSWORD = 'EMAIL_HOST_PASSWORD'
DEFAULT_FROM_EMAIL = 'DEFAULT_FROM_EMAIL'
SERVER_EMAIL = 'SERVER_EMAIL'
